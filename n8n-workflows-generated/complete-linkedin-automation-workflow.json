{
  "name": "Complete LinkedIn Automation System",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 9 * * *"
            }
          ]
        }
      },
      "id": "daily-trigger",
      "name": "Daily Trigger 9AM",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1,
      "position": [250, 300]
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "operation": "read",
        "sheetId": "{{$env.GOOGLE_SHEET_ID}}",
        "range": "Raw Prospects!A2:Z",
        "filters": {
          "conditions": [
            {
              "column": "H",
              "value": "pending"
            }
          ]
        },
        "options": {
          "returnAllMatches": false,
          "limit": 100
        }
      },
      "id": "read-pending",
      "name": "Read Pending Prospects",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 2,
      "position": [450, 300],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "1",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://api.lemlist.com/api/enrich",
        "method": "POST",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-API-KEY",
              "value": "={{$credentials.lemlistApi}}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "firstName",
              "value": "={{$json.firstName}}"
            },
            {
              "name": "lastName",
              "value": "={{$json.lastName}}"
            },
            {
              "name": "company",
              "value": "={{$json.company}}"
            }
          ]
        },
        "options": {
          "batching": {
            "batch": {
              "batchSize": 20,
              "batchInterval": 2000
            }
          }
        }
      },
      "id": "lemlist-enrich",
      "name": "Lemlist Enrichment",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [650, 300]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$json.email}}",
              "operation": "isEmpty"
            }
          ]
        }
      },
      "id": "check-enrichment",
      "name": "Check Enrichment",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [850, 300]
    },
    {
      "parameters": {
        "url": "https://api.apify.com/v2/acts/email-finder/run-sync",
        "method": "POST",
        "authentication": "genericCredentialType",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{$credentials.apifyToken}}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n  \"name\": \"={{$json.firstName}} {{$json.lastName}}\",\n  \"company\": \"={{$json.company}}\"\n}"
      },
      "id": "apify-fallback",
      "name": "Apify Fallback",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [850, 450]
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "operation": "update",
        "sheetId": "{{$env.GOOGLE_SHEET_ID}}",
        "range": "Enriched Data!A:Z",
        "dataMode": "autoMapInputData",
        "options": {
          "upsert": true,
          "keyColumn": "email"
        },
        "updateFields": "email,linkedinUrl,status,enrichment_date,enrichment_source,firstName,lastName,company,title",
        "additionalFields": {
          "status": "enriched",
          "enrichment_date": "={{new Date().toISOString()}}",
          "enrichment_source": "={{$node['Check Enrichment'].json.email ? 'lemlist' : 'apify'}}"
        }
      },
      "id": "update-enriched",
      "name": "Update Enriched Sheet",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 2,
      "position": [1050, 300],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "1",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const title = $json.title ? $json.title.toUpperCase() : '';\nlet campaignType = 'General';\n\nif (['CHIEF', 'PRESIDENT', 'CEO', 'CFO', 'CTO', 'CIO', 'CMO'].some(t => title.includes(t))) {\n    campaignType = 'C-Suite';\n} else if (['IT', 'DIGITAL', 'TECHNOLOGY', 'INFORMATICS', 'DATA'].some(t => title.includes(t))) {\n    campaignType = 'IT-Digital';\n} else if (['PATIENT', 'EXPERIENCE', 'QUALITY', 'CLINICAL'].some(t => title.includes(t))) {\n    campaignType = 'Patient-Experience';\n} else if (['REVENUE', 'OPERATIONS', 'FINANCE', 'RCM'].some(t => title.includes(t))) {\n    campaignType = 'Operations-Revenue';\n}\n\nreturn {\n    ...$json,\n    campaignType,\n    routingComplete: true\n};"
      },
      "id": "classify-title",
      "name": "Classify by Title",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [1250, 300]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours",
              "hoursInterval": 1
            }
          ]
        }
      },
      "id": "hourly-trigger",
      "name": "Hourly Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1,
      "position": [250, 600]
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "operation": "read",
        "sheetId": "{{$env.GOOGLE_SHEET_ID}}",
        "range": "Enriched Data!A2:Z",
        "filters": {
          "conditions": [
            {
              "column": "status",
              "value": "enriched"
            }
          ]
        },
        "options": {
          "limit": 50
        }
      },
      "id": "read-enriched",
      "name": "Read Enriched Prospects",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 2,
      "position": [450, 600],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "1",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "campaignType",
        "options": {}
      },
      "id": "split-campaign",
      "name": "Split by Campaign",
      "type": "n8n-nodes-base.itemLists",
      "typeVersion": 1,
      "position": [650, 600]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "campaignId",
              "value": "={{$json.campaignType === 'C-Suite' ? $env.LEMLIST_CSUITE_CAMPAIGN : $json.campaignType === 'IT-Digital' ? $env.LEMLIST_IT_CAMPAIGN : $json.campaignType === 'Patient-Experience' ? $env.LEMLIST_PATIENT_CAMPAIGN : $json.campaignType === 'Operations-Revenue' ? $env.LEMLIST_OPS_CAMPAIGN : $env.LEMLIST_GENERAL_CAMPAIGN}}"
            }
          ]
        }
      },
      "id": "set-campaign-id",
      "name": "Set Campaign ID",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [850, 600]
    },
    {
      "parameters": {
        "url": "https://api.lemlist.com/api/campaigns/{{$json.campaignId}}/leads",
        "method": "POST",
        "authentication": "genericCredentialType",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-API-KEY",
              "value": "={{$credentials.lemlistApi}}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n  \"email\": \"={{$json.email}}\",\n  \"firstName\": \"={{$json.firstName}}\",\n  \"lastName\": \"={{$json.lastName}}\",\n  \"company\": \"={{$json.company}}\",\n  \"linkedinUrl\": \"={{$json.linkedinUrl}}\"\n}",
        "options": {
          "batching": {
            "batch": {
              "batchSize": 20,
              "batchInterval": 2000
            }
          }
        }
      },
      "id": "add-to-lemlist",
      "name": "Add to Lemlist Campaign",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [1050, 600]
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "operation": "update",
        "sheetId": "{{$env.GOOGLE_SHEET_ID}}",
        "range": "Campaign Tracking!A:Z",
        "dataMode": "autoMapInputData",
        "updateFields": "email,connection_campaign_id,connection_sent_date,status",
        "additionalFields": {
          "connection_campaign_id": "={{$json.campaignId}}",
          "connection_sent_date": "={{new Date().toISOString()}}",
          "status": "in_campaign"
        }
      },
      "id": "update-tracking",
      "name": "Update Tracking",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 2,
      "position": [1250, 600],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "1",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "lemlist-webhook",
        "responseMode": "onReceived",
        "responseData": "allEntries",
        "responseCode": 200
      },
      "id": "webhook-trigger",
      "name": "Lemlist Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [250, 900],
      "webhookId": "{{$env.WEBHOOK_ID}}"
    },
    {
      "parameters": {
        "jsCode": "// Extract connection data from webhook\nconst data = $json;\n\nreturn {\n    email: data.email || data.lead?.email,\n    firstName: data.firstName || data.lead?.firstName,\n    lastName: data.lastName || data.lead?.lastName,\n    company: data.company || data.lead?.company,\n    title: data.title || data.lead?.title,\n    linkedinUrl: data.linkedinUrl || data.lead?.linkedinUrl,\n    acceptedAt: new Date().toISOString(),\n    campaignId: data.campaignId,\n    eventType: data.eventType || 'connection_accepted'\n};"
      },
      "id": "extract-data",
      "name": "Extract Connection Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [450, 900]
    },
    {
      "parameters": {
        "url": "https://api.apify.com/v2/acts/linkedin-scraper/runs",
        "method": "POST",
        "authentication": "genericCredentialType",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{$credentials.apifyToken}}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n  \"profileUrl\": \"={{$json.linkedinUrl}}\",\n  \"includePosts\": true,\n  \"postsLimit\": 10\n}"
      },
      "id": "linkedin-scrape",
      "name": "Apify LinkedIn Scraper",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [650, 800]
    },
    {
      "parameters": {
        "url": "https://serpapi.com/search",
        "options": {
          "qs": {
            "q": "={{$json.company}} news 2024 healthcare",
            "api_key": "={{$credentials.serperApiKey}}",
            "num": "5"
          }
        }
      },
      "id": "news-search",
      "name": "Serper News Search",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [650, 1000]
    },
    {
      "parameters": {
        "mode": "combine",
        "mergeByFields": {
          "values": [
            {
              "field1": "email",
              "field2": "email"
            }
          ]
        }
      },
      "id": "merge-research",
      "name": "Merge Research",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [850, 900]
    },
    {
      "parameters": {
        "url": "https://api.openai.com/v1/chat/completions",
        "method": "POST",
        "authentication": "genericCredentialType",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{$credentials.openaiApiKey}}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n  \"model\": \"gpt-4\",\n  \"messages\": [\n    {\n      \"role\": \"system\",\n      \"content\": \"You are crafting personalized LinkedIn messages for healthcare executives. Based on the research provided, generate 3 progressive messages:\\n\\nMessage 1 (Introduction): Reference specific recent activity, genuine connection, under 150 words, no pitch.\\n\\nMessage 2 (Value Bridge): Reference company initiative, share insight, soft value intro, under 200 words.\\n\\nMessage 3 (Clear CTA): Direct but respectful, specific value prop, clear next step, under 150 words.\\n\\nReturn a JSON object with keys: message1, message2, message3\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": \"Prospect: {{$json.firstName}} {{$json.lastName}}\\nTitle: {{$json.title}}\\nCompany: {{$json.company}}\\nLinkedIn Data: {{$json.linkedinData}}\\nCompany News: {{$json.newsData}}\"\n    }\n  ],\n  \"temperature\": 0.7,\n  \"max_tokens\": 1000\n}"
      },
      "id": "generate-messages",
      "name": "Generate AI Messages",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [1050, 900]
    },
    {
      "parameters": {
        "jsCode": "// Parse OpenAI response and extract messages\nconst response = $json.choices[0].message.content;\nlet messages;\n\ntry {\n    // Try to parse as JSON first\n    messages = JSON.parse(response);\n} catch (e) {\n    // Fallback: extract messages from text\n    messages = {\n        message1: response.match(/Message 1[:\\s]+([^\\n]+)/)?.[1] || 'Default intro message',\n        message2: response.match(/Message 2[:\\s]+([^\\n]+)/)?.[1] || 'Default value message',\n        message3: response.match(/Message 3[:\\s]+([^\\n]+)/)?.[1] || 'Default CTA message'\n    };\n}\n\nreturn {\n    email: $node['Extract Connection Data'].json.email,\n    firstName: $node['Extract Connection Data'].json.firstName,\n    lastName: $node['Extract Connection Data'].json.lastName,\n    company: $node['Extract Connection Data'].json.company,\n    custom_intro: messages.message1,\n    custom_value: messages.message2,\n    custom_cta: messages.message3,\n    research_notes: `LinkedIn: ${$json.linkedinData?.summary || 'N/A'} | News: ${$json.newsData?.snippet || 'N/A'}`\n};"
      },
      "id": "parse-messages",
      "name": "Parse AI Messages",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [1250, 900]
    },
    {
      "parameters": {
        "url": "https://api.lemlist.com/api/campaigns/{{$env.LEMLIST_ENGAGEMENT_CAMPAIGN}}/leads",
        "method": "POST",
        "authentication": "genericCredentialType",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-API-KEY",
              "value": "={{$credentials.lemlistApi}}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n  \"email\": \"={{$json.email}}\",\n  \"firstName\": \"={{$json.firstName}}\",\n  \"lastName\": \"={{$json.lastName}}\",\n  \"company\": \"={{$json.company}}\",\n  \"custom_intro\": \"={{$json.custom_intro}}\",\n  \"custom_value\": \"={{$json.custom_value}}\",\n  \"custom_cta\": \"={{$json.custom_cta}}\",\n  \"research_notes\": \"={{$json.research_notes}}\"\n}"
      },
      "id": "add-engagement",
      "name": "Add to Engagement Campaign",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [1450, 900]
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "operation": "update",
        "sheetId": "{{$env.GOOGLE_SHEET_ID}}",
        "range": "Campaign Tracking!A:Z",
        "dataMode": "autoMapInputData",
        "updateFields": "email,engagement_campaign_id,connection_accepted_date,messages_sent,response_status",
        "additionalFields": {
          "engagement_campaign_id": "{{$env.LEMLIST_ENGAGEMENT_CAMPAIGN}}",
          "connection_accepted_date": "={{new Date().toISOString()}}",
          "messages_sent": 3,
          "response_status": "personalized"
        }
      },
      "id": "update-engagement-tracking",
      "name": "Update Engagement Tracking",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 2,
      "position": [1650, 900],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "1",
          "name": "Google Sheets account"
        }
      }
    }
  ],
  "connections": {
    "Daily Trigger 9AM": {
      "main": [
        [
          {
            "node": "Read Pending Prospects",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read Pending Prospects": {
      "main": [
        [
          {
            "node": "Lemlist Enrichment",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Lemlist Enrichment": {
      "main": [
        [
          {
            "node": "Check Enrichment",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Enrichment": {
      "main": [
        [
          {
            "node": "Update Enriched Sheet",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Apify Fallback",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Apify Fallback": {
      "main": [
        [
          {
            "node": "Update Enriched Sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Enriched Sheet": {
      "main": [
        [
          {
            "node": "Classify by Title",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Hourly Trigger": {
      "main": [
        [
          {
            "node": "Read Enriched Prospects",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read Enriched Prospects": {
      "main": [
        [
          {
            "node": "Split by Campaign",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split by Campaign": {
      "main": [
        [
          {
            "node": "Set Campaign ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Campaign ID": {
      "main": [
        [
          {
            "node": "Add to Lemlist Campaign",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add to Lemlist Campaign": {
      "main": [
        [
          {
            "node": "Update Tracking",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Lemlist Webhook": {
      "main": [
        [
          {
            "node": "Extract Connection Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Connection Data": {
      "main": [
        [
          {
            "node": "Apify LinkedIn Scraper",
            "type": "main",
            "index": 0
          },
          {
            "node": "Serper News Search",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Apify LinkedIn Scraper": {
      "main": [
        [
          {
            "node": "Merge Research",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Serper News Search": {
      "main": [
        [
          {
            "node": "Merge Research",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge Research": {
      "main": [
        [
          {
            "node": "Generate AI Messages",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate AI Messages": {
      "main": [
        [
          {
            "node": "Parse AI Messages",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse AI Messages": {
      "main": [
        [
          {
            "node": "Add to Engagement Campaign",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add to Engagement Campaign": {
      "main": [
        [
          {
            "node": "Update Engagement Tracking",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataSuccessExecution": "all",
    "saveManualExecutions": true,
    "saveExecutionProgress": true,
    "callerPolicy": "any"
  },
  "staticData": null,
  "tags": [
    {
      "id": "1",
      "name": "LinkedIn Automation"
    },
    {
      "id": "2", 
      "name": "Healthcare"
    },
    {
      "id": "3",
      "name": "Lemlist"
    }
  ],
  "triggerCount": 3,
  "updatedAt": "2025-09-04T12:00:00.000Z",
  "versionId": "complete-v1"
}